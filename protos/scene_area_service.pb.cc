// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene_area_service.proto

#include "scene_area_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace scenearea {
class EnterSceneRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneRequest>
      _instance;
} _EnterSceneRequest_default_instance_;
class EnterSceneResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneResponse>
      _instance;
} _EnterSceneResponse_default_instance_;
}  // namespace scenearea
namespace protobuf_scene_5farea_5fservice_2eproto {
void InitDefaultsEnterSceneRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::scenearea::_EnterSceneRequest_default_instance_;
    new (ptr) ::scenearea::EnterSceneRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::scenearea::EnterSceneRequest::InitAsDefaultInstance();
}

void InitDefaultsEnterSceneRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterSceneRequestImpl);
}

void InitDefaultsEnterSceneResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::scenearea::_EnterSceneResponse_default_instance_;
    new (ptr) ::scenearea::EnterSceneResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::scenearea::EnterSceneResponse::InitAsDefaultInstance();
}

void InitDefaultsEnterSceneResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterSceneResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneRequest, player_session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneRequest, ip_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneRequest, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneRequest, map_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneRequest, map_copy_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneRequest, result_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneRequest, target_server_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneRequest, line_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scenearea::EnterSceneResponse, result_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::scenearea::EnterSceneRequest)},
  { 13, -1, sizeof(::scenearea::EnterSceneResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::scenearea::_EnterSceneRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::scenearea::_EnterSceneResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "scene_area_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030scene_area_service.proto\022\tscenearea\"\264\001"
      "\n\021EnterSceneRequest\022\026\n\016player_session\030\001 "
      "\001(\004\022\022\n\nip_address\030\002 \001(\t\022\014\n\004port\030\003 \001(\r\022\016\n"
      "\006map_id\030\004 \001(\r\022\024\n\014map_copy_idx\030\005 \001(\r\022\023\n\013r"
      "esult_code\030\006 \001(\005\022\031\n\021target_server_idx\030\007 "
      "\001(\005\022\017\n\007line_id\030\010 \001(\005\";\n\022EnterSceneRespon"
      "se\022%\n\006result\030\001 \001(\0162\025.scenearea.ResultCod"
      "e*\031\n\nResultCode\022\013\n\007SUCCESS\020\0002]\n\020SceneAre"
      "aService\022I\n\nEnterScene\022\034.scenearea.Enter"
      "SceneRequest\032\035.scenearea.EnterSceneRespo"
      "nseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 411);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "scene_area_service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_scene_5farea_5fservice_2eproto
namespace scenearea {
const ::google::protobuf::EnumDescriptor* ResultCode_descriptor() {
  protobuf_scene_5farea_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_5farea_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool ResultCode_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void EnterSceneRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneRequest::kPlayerSessionFieldNumber;
const int EnterSceneRequest::kIpAddressFieldNumber;
const int EnterSceneRequest::kPortFieldNumber;
const int EnterSceneRequest::kMapIdFieldNumber;
const int EnterSceneRequest::kMapCopyIdxFieldNumber;
const int EnterSceneRequest::kResultCodeFieldNumber;
const int EnterSceneRequest::kTargetServerIdxFieldNumber;
const int EnterSceneRequest::kLineIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneRequest::EnterSceneRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5farea_5fservice_2eproto::InitDefaultsEnterSceneRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:scenearea.EnterSceneRequest)
}
EnterSceneRequest::EnterSceneRequest(const EnterSceneRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_address().size() > 0) {
    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  ::memcpy(&player_session_, &from.player_session_,
    static_cast<size_t>(reinterpret_cast<char*>(&line_id_) -
    reinterpret_cast<char*>(&player_session_)) + sizeof(line_id_));
  // @@protoc_insertion_point(copy_constructor:scenearea.EnterSceneRequest)
}

void EnterSceneRequest::SharedCtor() {
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_session_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&line_id_) -
      reinterpret_cast<char*>(&player_session_)) + sizeof(line_id_));
  _cached_size_ = 0;
}

EnterSceneRequest::~EnterSceneRequest() {
  // @@protoc_insertion_point(destructor:scenearea.EnterSceneRequest)
  SharedDtor();
}

void EnterSceneRequest::SharedDtor() {
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnterSceneRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneRequest::descriptor() {
  ::protobuf_scene_5farea_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5farea_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneRequest& EnterSceneRequest::default_instance() {
  ::protobuf_scene_5farea_5fservice_2eproto::InitDefaultsEnterSceneRequest();
  return *internal_default_instance();
}

EnterSceneRequest* EnterSceneRequest::New(::google::protobuf::Arena* arena) const {
  EnterSceneRequest* n = new EnterSceneRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:scenearea.EnterSceneRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_session_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&line_id_) -
      reinterpret_cast<char*>(&player_session_)) + sizeof(line_id_));
  _internal_metadata_.Clear();
}

bool EnterSceneRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scenearea.EnterSceneRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_session = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_session_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), static_cast<int>(this->ip_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "scenearea.EnterSceneRequest.ip_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 map_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 map_copy_idx = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_copy_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 result_code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target_server_idx = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_server_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 line_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &line_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scenearea.EnterSceneRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scenearea.EnterSceneRequest)
  return false;
#undef DO_
}

void EnterSceneRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scenearea.EnterSceneRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_session = 1;
  if (this->player_session() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_session(), output);
  }

  // string ip_address = 2;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "scenearea.EnterSceneRequest.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip_address(), output);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  // uint32 map_id = 4;
  if (this->map_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->map_id(), output);
  }

  // uint32 map_copy_idx = 5;
  if (this->map_copy_idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->map_copy_idx(), output);
  }

  // int32 result_code = 6;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->result_code(), output);
  }

  // int32 target_server_idx = 7;
  if (this->target_server_idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->target_server_idx(), output);
  }

  // int32 line_id = 8;
  if (this->line_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->line_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:scenearea.EnterSceneRequest)
}

::google::protobuf::uint8* EnterSceneRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:scenearea.EnterSceneRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_session = 1;
  if (this->player_session() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_session(), target);
  }

  // string ip_address = 2;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "scenearea.EnterSceneRequest.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip_address(), target);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  // uint32 map_id = 4;
  if (this->map_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->map_id(), target);
  }

  // uint32 map_copy_idx = 5;
  if (this->map_copy_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->map_copy_idx(), target);
  }

  // int32 result_code = 6;
  if (this->result_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->result_code(), target);
  }

  // int32 target_server_idx = 7;
  if (this->target_server_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->target_server_idx(), target);
  }

  // int32 line_id = 8;
  if (this->line_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->line_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scenearea.EnterSceneRequest)
  return target;
}

size_t EnterSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:scenearea.EnterSceneRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_address = 2;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  // uint64 player_session = 1;
  if (this->player_session() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_session());
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  // uint32 map_id = 4;
  if (this->map_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->map_id());
  }

  // uint32 map_copy_idx = 5;
  if (this->map_copy_idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->map_copy_idx());
  }

  // int32 result_code = 6;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result_code());
  }

  // int32 target_server_idx = 7;
  if (this->target_server_idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_server_idx());
  }

  // int32 line_id = 8;
  if (this->line_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->line_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scenearea.EnterSceneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scenearea.EnterSceneRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scenearea.EnterSceneRequest)
    MergeFrom(*source);
  }
}

void EnterSceneRequest::MergeFrom(const EnterSceneRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scenearea.EnterSceneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  if (from.player_session() != 0) {
    set_player_session(from.player_session());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.map_id() != 0) {
    set_map_id(from.map_id());
  }
  if (from.map_copy_idx() != 0) {
    set_map_copy_idx(from.map_copy_idx());
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
  if (from.target_server_idx() != 0) {
    set_target_server_idx(from.target_server_idx());
  }
  if (from.line_id() != 0) {
    set_line_id(from.line_id());
  }
}

void EnterSceneRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scenearea.EnterSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneRequest::CopyFrom(const EnterSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scenearea.EnterSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneRequest::IsInitialized() const {
  return true;
}

void EnterSceneRequest::Swap(EnterSceneRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneRequest::InternalSwap(EnterSceneRequest* other) {
  using std::swap;
  ip_address_.Swap(&other->ip_address_);
  swap(player_session_, other->player_session_);
  swap(port_, other->port_);
  swap(map_id_, other->map_id_);
  swap(map_copy_idx_, other->map_copy_idx_);
  swap(result_code_, other->result_code_);
  swap(target_server_idx_, other->target_server_idx_);
  swap(line_id_, other->line_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneRequest::GetMetadata() const {
  protobuf_scene_5farea_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5farea_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterSceneResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneResponse::EnterSceneResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5farea_5fservice_2eproto::InitDefaultsEnterSceneResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:scenearea.EnterSceneResponse)
}
EnterSceneResponse::EnterSceneResponse(const EnterSceneResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:scenearea.EnterSceneResponse)
}

void EnterSceneResponse::SharedCtor() {
  result_ = 0;
  _cached_size_ = 0;
}

EnterSceneResponse::~EnterSceneResponse() {
  // @@protoc_insertion_point(destructor:scenearea.EnterSceneResponse)
  SharedDtor();
}

void EnterSceneResponse::SharedDtor() {
}

void EnterSceneResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneResponse::descriptor() {
  ::protobuf_scene_5farea_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5farea_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneResponse& EnterSceneResponse::default_instance() {
  ::protobuf_scene_5farea_5fservice_2eproto::InitDefaultsEnterSceneResponse();
  return *internal_default_instance();
}

EnterSceneResponse* EnterSceneResponse::New(::google::protobuf::Arena* arena) const {
  EnterSceneResponse* n = new EnterSceneResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:scenearea.EnterSceneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool EnterSceneResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scenearea.EnterSceneResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .scenearea.ResultCode result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::scenearea::ResultCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scenearea.EnterSceneResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scenearea.EnterSceneResponse)
  return false;
#undef DO_
}

void EnterSceneResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scenearea.EnterSceneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .scenearea.ResultCode result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:scenearea.EnterSceneResponse)
}

::google::protobuf::uint8* EnterSceneResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:scenearea.EnterSceneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .scenearea.ResultCode result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scenearea.EnterSceneResponse)
  return target;
}

size_t EnterSceneResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:scenearea.EnterSceneResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .scenearea.ResultCode result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scenearea.EnterSceneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scenearea.EnterSceneResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scenearea.EnterSceneResponse)
    MergeFrom(*source);
  }
}

void EnterSceneResponse::MergeFrom(const EnterSceneResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scenearea.EnterSceneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void EnterSceneResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scenearea.EnterSceneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneResponse::CopyFrom(const EnterSceneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scenearea.EnterSceneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneResponse::IsInitialized() const {
  return true;
}

void EnterSceneResponse::Swap(EnterSceneResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneResponse::InternalSwap(EnterSceneResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneResponse::GetMetadata() const {
  protobuf_scene_5farea_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5farea_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace scenearea

// @@protoc_insertion_point(global_scope)
